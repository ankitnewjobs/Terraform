# 1. Output Values - Resource Group

output "resource_group_id" 
{
  description = "Resource Group ID"

  # Attribute Reference
  value = azurerm_resource_group.myrg.id 
}
output "resource_group_name" 
{
  description = "Resource Group name"
  # Argument Reference
  value = azurerm_resource_group.myrg.name  
}

# 2. Output Values - Virtual Network

output "virtual_network_name"
{
  description = "Virutal Network Name"
  value = azurerm_virtual_network.myvnet.name 
  #sensitive = true
}

# 3. Output Values - Virtual Machine

output "vm_public_ip_address"
{
  description = "My Virtual Machine Public IP"
  value = azurerm_linux_virtual_machine.mylinuxvm.public_ip_address
}

# 4. Output Values - Virtual Machine Admin User

output "vm_admin_user" 
{
  description = "My Virtual Machine Admin User"
  value = azurerm_linux_virtual_machine.mylinuxvm.admin_username
}

----------------------------------------------------------------------------------------------------------------------------------------

# Explanation: - 

- Definition: output blocks let Terraform expose or export information about created resources after Terraform apply.  

- Use cases:

  - Print useful resource information (like IPs, IDs, names) to the terminal.  
  - Pass resource values between modules (like passing a subnet ID from a “network” module to a “VM” module).  
  - Integrate with CI/CD pipelines (e.g., Jenkins or Azure DevOps extracting IPs to run post-deployment scripts).  
  - Debugging deployments when something breaks (like verifying Azure has assigned the expected IP address).  

## 1. Output Values – Resource Group

- What it does:

  - resource_group_id: Exposes the unique ID of the Azure Resource Group.  
    - azurerm_resource_group.myrg.id refers to the id attribute generated by Azure after creating the RG.  
    - Example format: /subscriptions/xxxx/resourceGroups/myrg  

- resource_group_name: Exposes the name of the Resource Group.  
    - Example: "myrg"  

- Why this matters in practice:

  - Other modules (like network or compute) can consume the output rather than hardcoding the resource group name.  
  - CI/CD pipelines may need to confirm which RG got created.  
  - Debugging: sometimes Terraform applies to the wrong subscription/tenant — printing IDs helps validate.  

## 2. Output Values – Virtual Network

- What it does:

  - Prints the name of the Virtual Network provisioned (azurerm_virtual_network.myvnet).  
  - Example: "myvnet-dev-eastus"  

- Note about sensitive:

  - If you set sensitive = true, Terraform will hide the output in CLI/State for security (same concept as passwords).  
  - Not needed for a VNet name, but good to know (useful for secrets like passwords, SAS tokens, or keys).

- Why it's useful:

  - Helpful for networking automation (like using this VNet in a peering module).  
  - Debugging Azure connectivity issues (ensures Terraform is referencing the correct network).  

## 3. Output Values – Virtual Machine

- What it does:

  - Exposes the Public IP assigned to your VM (azurerm_linux_virtual_machine.mylinuxvm).  
  - This is automatically fetched from Azure after the VM creation.  
  - Example output: 20.55.186.178  

- Why it’s important:

  - Automation: After deployment, you can instantly SSH into the VM without checking the Azure Portal. Example:  
    
    ssh azureuser@$(terraform output -raw vm_public_ip_address)
    
  - CI/CD integration: A pipeline job could take this output and run configuration scripts directly.  

  - Debugging: If the VM fails to connect, you can confirm the assigned public IP here.  

## 4. Output Values – Virtual Machine Adminser

- What it does:

  - Prints out the Admin Username you assigned to the Linux VM.  
  - Example: "azureuser"  

- Why important: DevOps engineers use this for SSH commands:  
    
    ssh $(terraform output -raw vm_admin_user)@$(terraform output -raw vm_public_ip_address)
    
  - Makes your automation self-documenting:  no confusion about which user to log in with.  

- Caution: This is safe (not sensitive like passwords or keys). But if you output credentials, always mark them sensitive = true.  

## Example Usage in Real Workflow

After terraform apply, running: terraform output

Might give:

resource_group_id        = "/subscriptions/xxxx/resourceGroups/myrg"
resource_group_name      = "myrg"
virtual_network_name     = "myvnet-dev-eastus"
vm_public_ip_address     = "20.55.186.178"
vm_admin_user            = "azureuser"

Useful in scripts:

ssh $(terraform output -raw vm_admin_user)@$(terraform output -raw vm_public_ip_address)

## Summary Table 

|     Output Name       |                 Retrieves From                             |             Purpose                  |
|-----------------------|------------------------------------------------------------|--------------------------------------|
|  resource_group_id    |  azurerm_resource_group.myrg.id                            |   Unique Azure RG ID                 |
|  resource_group_name  |  azurerm_resource_group.myrg.name                          |  Human-readable Resource Group name  |
|  virtual_network_name |  azurerm_virtual_network.myvnet.name                       |  VNet identifier for networking      |
|  vm_public_ip_address |  azurerm_linux_virtual_machine.mylinuxvm.public_ip_address |  Public IP for SSH/HTTP access       |
|  vm_admin_user        |  azurerm_linux_virtual_machine.mylinuxvm.admin_username    |  Login user for VM                   |
